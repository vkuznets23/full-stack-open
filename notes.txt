//Create the app
npx create-react-app my-app
cd my-app
npm run dev
OR
npm create vite@latest my-app
cd my-app
npm install
npm run dev



//create db
npm install json-server --save-dev
create .json file
json-server --port 3001 --watch db.json
npm run server

//add axios library
npm install axios
create service file and define API methods for CRUD
EXAMPLE:
import axios from 'axios';
const baseUrl = 'http://localhost:3001/persons';
const getAll = () => axios.get(baseUrl).then(response => response.data);
const create = (newPerson) => axios.post(baseUrl, newPerson).then(response => response.data);
const update = (id, updatedPerson) => axios.put(`${baseUrl}/${id}`, updatedPerson).then(response => response.data);
const remove = (id) => axios.delete(`${baseUrl}/${id}`).then(response => response.data);
export default { getAll, create, update, remove };

//create a new template for app (backend)
npm init -> will automatically generate package.json file
then when file aka starting point is ready we can do: node filename.js OR npm start OR npm test (when we have test file)
npm install express

npm install json-server --save-dev -> to add server dependency

npm install -> will add all dependances 

//instal nodemon
npm install --save-dev nodemon
node_modules/.bin/nodemon index.js // to start application with nodemon
OR easier to add dependency to the .json file "dev": "nodemon filename.js", and run npm run dev

